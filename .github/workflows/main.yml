name: rmd-render
on:
  push:
    branches-ignore:
      - gh-pages
jobs:
  rmd-render-job:
    runs-on: ubuntu-latest
    env:
      token: ${{ secrets.GH_PAT }}
      url_repo: "https://${token}@${GITHUB_REPOSITORY}.git"
      path_root: $(pwd)
    steps:
      - uses: actions/checkout@v1
      - uses: r-lib/actions/setup-r@master
        with:
          r-version: '3.6.1'
      - uses: r-lib/actions/setup-pandoc@master
      - name: check
      - run: |
          Rscript -e "print('R installation works!')"
          echo "Path root: $path_root"
          ls -lh
      - name: Clone repository
      - run: |
          git clone --single-branch --branch master $url_repo master
          cd master
          path_repo: $(pwd)
          echo "Path repo: $path_repo"
          ls -lh
      - name: install dependencies
        run: |
          Rscript -e "install.packages('yaml')"
          Rscript -e "pkg <- yaml::read_yaml('_site.yml')$packages;pc <-c(pkg$packages_cran_repo,pkg$packages_cran_student);bc <-c(pkg$packages_bioc_repo,pkg$packages_bioc_student);print(pc);print(bc);" \
          install.packages(pc,dep=TRUE);\
          BiocManager::install(bc)"
      - name: render website
        run: |
          Rscript -e "rmarkdown::render()"
      - name: get variables
        run: |
          path_export=$(grep -E '^output_dir' _site.yml | sed -E 's/^[a-zA-Z0-9_-]+[:][[:space:]]//')
      - name: pull gh-pages, check duplicate folder, copy rendered folder
        run: |
          git clone --single-branch --branch gh-pages $url_repo tmprepo
          cd tmprepo
          if [ -d $path_export ]; then
            echo "Directory ${path_export} already exists. Removing the directory."
            git rm -r $path_export
            git commit -m "Old directory ${path_export} deleted."
          fi
          cd ${path_repo}
          cp -r $path_export tmprepo/
          cd tmprepo
      - name: create index.md
        run: |
          str_user_repo=$(echo $url_git | sed 's/https:\/\/github.com\///' | sed 's/.git//')
          str_user=$(echo "$str_user_repo" | sed 's/\/.*//')
          str_repo=$(echo "$str_user_repo" | sed 's/.*\///')
          printf "All current and previous workshop materials are listed below. Numbers denote year and month.\n\n" > index.md
          dirs=$(ls -d */ | sed 's/\///' | tac)
          for i in $dirs
          do
           printf "<a href='https://${str_user}.github.io/${str_repo}/${i}/'>${i}</a>\n\n" >> index.md
          done
      - name: push to gh-pages
        run: |
          git add .
          tm=$(date +%Y%m%d-%H%M%S)
          git commit -m "Updated contents at ${tm}"
          git push origin
          cd ${path_repo}
          rm -rf tmprepo
          rm -rf $pathexport
